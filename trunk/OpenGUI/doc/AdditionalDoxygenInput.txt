/*!
	\mainpage OpenGUI Documentation
	
	\image html logo.jpg
	
	%OpenGUI is an easy to use and easy to extend GUI framework for use in 3D applications.
	The core aim of %OpenGUI is to provide developers of 3D applications a drop in
	system for creating simple GUIs without hassle, while still providing an easy method
	of extendability for creating complex GUIs with custom widgets.
	<BR><BR>
	See the list of \subpage Features "features" for details.
	<BR><BR>
	
	
	
	\section UserDocs User Documentation
	The user documentation is divided into several sections and is intended to provide
	explanations and examples of library usage, as well provide a few advanced topics
	such as how to extend the GUI through custom widgets.
	
	- \subpage IntegratingOpenGUI "Integrating OpenGUI"
	
	- \subpage XMLDOC "XML Configuration Files"
	
	- \subpage CreatingWidgets "Creating Widgets"
	
	- \subpage Events  "Events"
	
	- \subpage CustomWidgets "Extending via Custom Widgets"
	
	\n\n\n
	<hr>	
	\note
	%OpenGUI is distributed using the  BSD license so that both amateur and
	professional developers can benefit from its use. The exact copy of
	this license can be found in the file LICENSE.TXT that is distributed with the
	source code, or by clicking \link License here.\endlink
*/



/*!
	\page License
	%OpenGUI is freely usable/distributable under the BSD license, the contents of which follow:
	<HR>
	\verbinclude LICENSE.TXT
	<BR><HR><BR>
	%OpenGUI also utilizes a few external libraries. The names, websites and license types of these
	external libraries are listed below.
	<HR>
	Name: Corona (version 1.0.2)\n
	Website: http://corona.sourceforge.net/ \n
	License: <a href="http://opensource.org/licenses/zlib-license.html">zlib license</a> \n
	<HR>
	Name: TinyXML (version 2.4.3)\n
	Website: http://www.grinninglizard.com/tinyxml/index.html \n
	License: <a href="http://opensource.org/licenses/zlib-license.html">zlib license</a> \n
	<HR>
	Name: Freetype (version 2.1.10)\n
	Website: http://www.freetype.org/ \n
	License: <a href="http://freetype.sourceforge.net/FTL.TXT">The FreeType License</a> \n
	Credit as requested:\n
\verbatim
Portions of this software are copyright © 2006
The FreeType Project (www.freetype.org). All rights reserved.
\endverbatim
	
*/
/*!
	\page Features
		
	- Easily integrated with any input system: All input is injected into the system by the application using simple function calls.
	- Cross API: Is easily used in native DirectX or OpenGL, as well as the OGRE rendering engine.
	- Easily extendable widget set by class inheritance.
	- Auto scaling, pixel aligned fonts, rendered via FreeType 2.
	- Free form render operations allow Widget imagery to be rotated and scaled in any way imaginable.
	- Plugin system so custom widgets can be used in any application without recompiling.
	
*/





/*!
	\page CustomWidgets
	This page explains how to create custom widgets to extend the gui.
	\todo finish me
	\section RecievingEvents Receiving Events
	\section IssuingAlerts Issuing Alerts
*/






/*! \page IntegratingOpenGUI Integration
	This will cover how to add OpenGUI to your application
*/

/*!
	\page CreatingWidgets Creating Widgets
	\todo this page needs to be finished
	
	\section newWidget Direct Creation via "new"
	SomeWidget* w = new SomeWidget;
	
	\section createWidget Widgets by name
	Widgets can be created via System::createWidget
	
	\section WidgetTemplate Widget Templates
	Templates allow you to create widgets with preconfigured properties.
*/

/*! \page CoordinateSpaces Coordinate Spaces
	Working with coordinates within GUIs can often become more difficult than you would
	initially expect. The reason for this comes from the constant changes of coordinate space.
	As you build a GUI hierarchy, you are nesting widgets within other widgets. The top level
	widget (the first added to the hierarchy) is positioned and sized using the coordinate
	system defined by the GUISheet. However, a child of that top level widget may or may not
	use that same coordinate system. It is up to the containing widget to define the coordinate
	space in which its children reside.
	
*/

