
/*! \page Events
	Any Object derived class has the ability to expose Events within %OpenGUI. Events are used heavily throughout %OpenGUI to notify Widgets about conditions that may be of interest to them. Many of these events have a default action that is performed to maintain a logically working GUI environment, and in some cases the default event action for one Widget is not necessarily the best course of action for another.
	
	To provide a consistent event system that offers the most flexibility for applications to customize, %OpenGUI uses a standardized method of event processing. Every standard event that a Widget receives in OpenGUI, either due to input injection or as the result of another event, is initiated by calling the appropriate event processor. Event processors only have a single purpose, to build the necessary EventArgs and trigger the event via Object::triggerEvent(). They have a standard naming convention:
	\code event<Event Name>(params) \endcode
	An example would be \c eventActivate, which would (as implied) triggers the "Activate" event. While event processors are currently virtual functions, their virtuality should be considered deprecated, and overriding their functionality should be avoided whenever possible.
	
	The actual default event actions are handled in the event handlers. These have a standard naming convention as well:
	\code on<Event Name>(Object* sender,Attach_EventArgs& evtArgs) \endcode
	All default actions for events occur within these default event handlers. They are virtual functions so that they can be overridden when the current default action is not the necessary action for a new derived Widget type. It is also legal to override an event handler in a subclass of a Widget just to receive notification of the event without registering another handler, but you should take care to call the existing handler during your override to ensure the previous functionality remains.
	
\section EventList Events List
	The following is a list of all events that %OpenGUI supports internally. This does not mean that these are the only events that are possible, as any Widget can define new events that it is willing to accept. This is merely the complete list of events that %OpenGUI expects Widgets, Controls, ContainerControls, and Windows to have. Since more specialized Widgets tend to have more events, these events are broken up into smaller lists to illustrate the class hierarchy level where each becomes available.
	
	As the Widget classes become more specific, they also include the events of their base classes.
<hr>

\section EventList_Widget Widget Events
- \subpage Event_Attached "Attached"
- \subpage Event_Detached "Detached"
- \subpage Event_Draw "Draw"
- \subpage Event_Invalidated "Invalidated"
- \subpage Event_Cursor_Move "Cursor_Move"
- \subpage Event_Cursor_Press "Cursor_Press"
- \subpage Event_Cursor_Release "Cursor_Release"
- \subpage Event_Cursor_Hidden "Cursor_Hidden"
- \subpage Event_Cursor_Shown "Cursor_Shown"

\section EventList_Control Control Events
- \subpage Event_Cursor_Click "Cursor_Click"
- \subpage Event_Cursor_Enter "Cursor_Enter"
- \subpage Event_Cursor_Leave "Cursor_Leave"
- \subpage Event_Targeted "Targeted"
- \subpage Event_UnTargeted "UnTargeted"

\section EventList_ContainerControl ContainerControl Events
- \subpage Event_ChildAttached "ChildAttached"
- \subpage Event_ChildDetached "ChildDetached"

\section EventList_Window Window Events




\page Event_Attached Attached
Occurs when the Widget was attached to a container.
	\par Occurs In:
	OpenGUI::Widget
	\par EventArgs:
	OpenGUI::Attach_EventArgs



\page Event_Detached Detached
Occurs when the Widget was removed from its container.
	\par Occurs In:
	OpenGUI::Widget
	\par EventArgs:
	OpenGUI::Attach_EventArgs



\page Event_Draw Draw
Draw this object using the given brush.
	\par Occurs In:
	OpenGUI::Widget
	\par EventArgs:
	OpenGUI::Draw_EventArgs



\page Event_Invalidated Invalidated
The Widget was invalidated and will need to be redrawn next Screen::update()
	\par Occurs In:
	OpenGUI::Widget
	\par EventArgs:
	OpenGUI::Draw_EventArgs
	\see OpenGUI::Screen::update(), OpenGUI::Screen::invalidateAll(), OpenGUI::Widget::invalidate(), \link Event_Draw Draw Event \endlink



\page Event_Cursor_Move Cursor_Move
The cursor has moved.

OpenGUI::ContainerControl culls these messages, only sending them to siblings when the cursor is currently inside of itself as well.
	\par Occurs In:
	OpenGUI::Widget
	\par EventArgs:
	OpenGUI::Cursor_EventArgs



\page Event_Cursor_Press Cursor_Press
Called when the cursor button was pressed.
	\par Occurs In:
	OpenGUI::Widget
	\par EventArgs:
	OpenGUI::Cursor_EventArgs



\page Event_Cursor_Release Cursor_Release
Called when the cursor button was released.
	\par Occurs In:
	OpenGUI::Widget
	\par EventArgs:
	OpenGUI::Cursor_EventArgs



\page Event_Cursor_Hidden Cursor_Hidden
The cursor was hidden.
	\par Occurs In:
	OpenGUI::Widget
	\par EventArgs:
	OpenGUI::Cursor_EventArgs



\page Event_Cursor_Shown Cursor_Shown
The cursor was shown.
	\par Occurs In:
	OpenGUI::Widget
	\par EventArgs:
	OpenGUI::Cursor_EventArgs
	


\page Event_Cursor_Click Cursor_Click
The cursor was pressed and released within this Control.
	\par Occurs In:
	OpenGUI::Control
	\par EventArgs:
	OpenGUI::Cursor_EventArgs



\page Event_Cursor_Enter Cursor_Enter
The cursor cursor entered this Control.
	\par Occurs In:
	OpenGUI::Control
	\par EventArgs:
	OpenGUI::Cursor_EventArgs



\page Event_Cursor_Leave Cursor_Leave
The cursor left this Control.
	\par Occurs In:
	OpenGUI::Control
	\par EventArgs:
	OpenGUI::Cursor_EventArgs



\page Event_Targeted Targeted
The Control was targeted, either by cursor or by menu navigation.
	\par Occurs In:
	OpenGUI::Control
	\par EventArgs:
	OpenGUI::EventArgs



\page Event_UnTargeted UnTargeted
The Control is no longer targeted, as a result of either cursor or menu navigation.
	\par Occurs In:
	OpenGUI::Control
	\par EventArgs:
	OpenGUI::EventArgs



\page Event_ChildAttached ChildAttached
A child Widget has been attached to this ContainerControl.
	\par Occurs In:
	OpenGUI::ContainerControl
	\par EventArgs:
	OpenGUI::Attach_EventArgs



\page Event_ChildDetached ChildDetached
A child Widget has been detached from this ContainerControl.
	\par Occurs In:
	OpenGUI::ContainerControl
	\par EventArgs:
	OpenGUI::Attach_EventArgs

*/
