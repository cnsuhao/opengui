# Build Script for Amethyst
import os
import fnmatch

try:
	Import('GLFW_NATIVE_BUILD')
except:
	GLFW_NATIVE_BUILD = False

Import('base_env')
Import('fast_env')
Import('base_env_s')
Import('fast_env_s')
Import('platform')
Import('debug')
Import('OUTFILE')

if platform == 'win32':
	platformdir = "win32"

#######################################################################
# Any file listed within FastFiles will be compiled using the fast_env.
# They are also automatically removed from the normal SOURCE list.
#######################################################################
FastFiles = Split("""
image.c
tga.c
""")
#######################################################################


# Build Common Source Files
files = os.listdir(".")
SOURCE = fnmatch.filter(files,"*.c")


tmpfiles = os.listdir(platformdir)
tmpfiles = fnmatch.filter(tmpfiles,"*.c")
files = []
for f in tmpfiles:
	files += [platformdir + '/' + f]

SOURCE += files

# Build Fast Source (SOURCE_F) and remove them from SOURCE
SOURCE_F = FastFiles
for f in SOURCE_F:
	while SOURCE.count(f) > 0:
		SOURCE.remove(f)

###########################
# Build Static Library
filename = OUTFILE + '_static'
if debug:
	filename += '_d'
base_env.Append(CPPPATH=[platformdir,'.'])
fast_env.Append(CPPPATH=[platformdir,'.'])
base_env['OBJPREFIX'] = 'static_'
fast_env['OBJPREFIX'] = 'static_'
static_objs      = base_env.StaticObject(SOURCE)
static_objs     += fast_env.StaticObject(SOURCE_F)
staticlib = base_env.StaticLibrary(target = filename, source = static_objs)
inst = Install('../',staticlib)
if bool(GLFW_NATIVE_BUILD):
	Alias('static',inst)


###########################
# Build Shared Library
filename = OUTFILE
if debug:
	filename += '_d'
base_env_s.Append(CPPPATH=[platformdir,'.'])
fast_env_s.Append(CPPPATH=[platformdir,'.'])
base_env_s['OBJPREFIX'] = 'shared_'
fast_env_s['OBJPREFIX'] = 'shared_'
shared_objs      = base_env_s.SharedObject(SOURCE)
shared_objs     += fast_env_s.SharedObject(SOURCE_F)
sharedlib = base_env_s.SharedLibrary(target = filename, source = shared_objs)
inst_s = Install('../',sharedlib)
if bool(GLFW_NATIVE_BUILD):
	Alias('shared',inst_s)
	Alias('dll',inst_s)

out = inst_s + inst
Return('out')
