# Build Script for Demo4
import os
import fnmatch

Import('platform')
Import('debug')
Import('base_env')
env = base_env.Copy()

# Source files (and yes, this is indeed much like cheating)
files = os.listdir(".")
Source = fnmatch.filter(files,"*.cpp")

CPPPATH = """
	#/OpenGUI
	../Renderer_OpenGL
	../deps/glfw/include
	../deps/corona/src
	"""
LIBPATH_D = """
	#/lib
	../lib
	../deps/glfw
	../deps/corona
	"""
	
LIBPATH_R = """
	#/lib
	../lib
	../deps/glfw
	../deps/corona
	"""

LIBS_D = """
	OpenGUI_d
	Renderer_OpenGL_d
	corona_d
	glfw_static_d
	"""

LIBS_R = """
	OpenGUI
	Renderer_OpenGL
	corona
	glfw_static
	"""

OUTFILE = 'Demo4'



################################################################


OUTFILE_orig = OUTFILE


if debug:
	OUTFILE = OUTFILE + '_d'
	libpath = Split(LIBPATH_D)
	libs = Split(LIBS_D)
else:
	libpath = Split(LIBPATH_R)
	libs = Split(LIBS_R)


env.Append(CPPPATH = Split(CPPPATH))
env.Append(LIBPATH = libpath)
env.Append(LIBS = libs)

if platform == 'win32':
	env.Append(LINKFLAGS=['/SUBSYSTEM:WINDOWS'])
	env.Append(LIBS = Split('glu32 opengl32'))



env['PDB'] = OUTFILE + '.pdb'


prog = env.Program( OUTFILE, Source )


if debug and platform == "win32":
	env.SideEffect(OUTFILE + '.ilk', prog)
	Clean(prog, OUTFILE + '.ilk')

final = []
final += env.Install('../bin', prog )
Alias('opengl_demo4',final)
Alias('opengl',final)
Alias('all',final)
