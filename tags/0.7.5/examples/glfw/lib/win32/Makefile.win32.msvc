# OpenGUI (4/23/06) - Fixed library collisions by splitting build into
#     separate debug & release builds.

##########################################################################
# Makefile for GLFW on Windows using MS VC++ 6.x.
#-------------------------------------------------------------------------
# To compile GLFW using this makefile, run:
#  nmake -f Makefile.win32.msvc
#-------------------------------------------------------------------------
# $Id: Makefile.win32.msvc,v 1.3 2004/04/07 20:58:26 marcus256 Exp $
##########################################################################

##########################################################################
# Default: Build static and dynamic versions of GLFW
##########################################################################
# OpenGUI (4/23/06) Added debug library build type
default: glfw.lib glfw_d.lib
#glfw.dll - OpenGUI examples don't use DLL build, so it is disabled


##########################################################################
# GLFW version
##########################################################################
VERMAJOR = 2
VERMINOR = 5


##########################################################################
# Compiler settings
##########################################################################
# OpenGUI (4/23/06) Switched runtime library linkage from LIBC (/ML) to MSVCRT (/MD)
CC         = cl
CFLAGS     = /nologo /c /MD /O1sgiy /Gs /W3 /I. /I..
CFLAGS_D     = /nologo /c /MDd /O1sgiy /Gs /W3 /I. /I..
CFLAGS_DLL = $(CFLAGS) /DGLFW_BUILD_DLL

# Some modules should be optimized for speed (image decoding)
CFLAGS_SPEED     = /nologo /c /MD /O2tgiy /Gs /W3 /I. /I..
CFLAGS_SPEED_D     = /nologo /c /MDd /O2tgiy /Gs /W3 /I. /I..
CFLAGS_SPEED_DLL = $(CFLAGS_SPEED) /DGLFW_BUILD_DLL


##########################################################################
# Library builder settings
##########################################################################
# Static library
MKLIB     = lib
LIBFLAGS  = /nologo

# DLL
LINK      = link
LINKFLAGS = /nologo /dll /version:$(VERMAJOR).$(VERMINOR)
LINKLIBS  = opengl32.lib user32.lib


##########################################################################
# Object files for static library
##########################################################################
#OpenGUI (4/23/06) - These are used for release builds
OBJS = \
       enable.obj \
       fullscreen.obj \
       glext.obj \
       image.obj \
       init.obj \
       input.obj \
       joystick.obj \
       tga.obj \
       thread.obj \
       time.obj \
       window.obj \
       win32_enable.obj \
       win32_fullscreen.obj \
       win32_glext.obj \
       win32_init.obj \
       win32_joystick.obj \
       win32_thread.obj \
       win32_time.obj \
       win32_window.obj

#OpenGUI (4/23/06) - These are used for debug builds 
OBJS_D = \
       enable_d.obj \
       fullscreen_d.obj \
       glext_d.obj \
       image_d.obj \
       init_d.obj \
       input_d.obj \
       joystick_d.obj \
       tga_d.obj \
       thread_d.obj \
       time_d.obj \
       window_d.obj \
       win32_enable_d.obj \
       win32_fullscreen_d.obj \
       win32_glext_d.obj \
       win32_init_d.obj \
       win32_joystick_d.obj \
       win32_thread_d.obj \
       win32_time_d.obj \
       win32_window_d.obj


##########################################################################
# Object files for dynamic library
##########################################################################
DLLOBJS = \
       enable_dll.obj \
       fullscreen_dll.obj \
       glext_dll.obj \
       image_dll.obj \
       init_dll.obj \
       input_dll.obj \
       joystick_dll.obj \
       tga_dll.obj \
       thread_dll.obj \
       time_dll.obj \
       window_dll.obj \
       win32_dllmain_dll.obj \
       win32_enable_dll.obj \
       win32_fullscreen_dll.obj \
       win32_glext_dll.obj \
       win32_init_dll.obj \
       win32_joystick_dll.obj \
       win32_thread_dll.obj \
       win32_time_dll.obj \
       win32_window_dll.obj



##########################################################################
# Rule for building static library
##########################################################################
#OpenGUI (4/23/06) - Release build
glfw.lib: $(OBJS)
	$(MKLIB) $(LIBFLAGS) /OUT:glfw.lib $(OBJS)

#OpenGUI (4/23/06) - Debug build
glfw_d.lib: $(OBJS_D)
	$(MKLIB) $(LIBFLAGS) /OUT:glfw_d.lib $(OBJS_D)


##########################################################################
# Rule for building dynamic library
##########################################################################
glfw.dll: $(DLLOBJS)
	$(LINK) $(LINKFLAGS) /out:glfw.dll /implib:glfwdll.lib /def:glfwdll.def $(DLLOBJS) $(LINKLIBS)


##########################################################################
# Rules for building static library object files
##########################################################################
#OpenGUI (4/23/06) - These are used for release builds
enable.obj: ..\\enable.c ..\\internal.h platform.h
	$(CC) $(CFLAGS) /Fo$@ ..\\enable.c

fullscreen.obj: ..\\fullscreen.c ..\\internal.h platform.h
	$(CC) $(CFLAGS) /Fo$@ ..\\fullscreen.c

glext.obj: ..\\glext.c ..\\internal.h platform.h
	$(CC) $(CFLAGS) /Fo$@ ..\\glext.c

image.obj: ..\\image.c ..\\internal.h platform.h
	$(CC) $(CFLAGS_SPEED) /Fo$@ ..\\image.c

init.obj: ..\\init.c ..\\internal.h platform.h
	$(CC) $(CFLAGS) /Fo$@ ..\\init.c

input.obj: ..\\input.c ..\\internal.h platform.h
	$(CC) $(CFLAGS) /Fo$@ ..\\input.c

joystick.obj: ..\\joystick.c ..\\internal.h platform.h
	$(CC) $(CFLAGS) /Fo$@ ..\\joystick.c

tga.obj: ..\\tga.c ..\\internal.h platform.h
	$(CC) $(CFLAGS_SPEED) /Fo$@ ..\\tga.c

thread.obj: ..\\thread.c ..\\internal.h platform.h
	$(CC) $(CFLAGS) /Fo$@ ..\\thread.c

time.obj: ..\\time.c ..\\internal.h platform.h
	$(CC) $(CFLAGS) /Fo$@ ..\\time.c

window.obj: ..\\window.c ..\\internal.h platform.h
	$(CC) $(CFLAGS) /Fo$@ ..\\window.c

win32_enable.obj: win32_enable.c ..\\internal.h platform.h
	$(CC) $(CFLAGS) /Fo$@ win32_enable.c

win32_fullscreen.obj: win32_fullscreen.c ..\\internal.h platform.h
	$(CC) $(CFLAGS) /Fo$@ win32_fullscreen.c

win32_glext.obj: win32_glext.c ..\\internal.h platform.h
	$(CC) $(CFLAGS) /Fo$@ win32_glext.c

win32_init.obj: win32_init.c ..\\internal.h platform.h
	$(CC) $(CFLAGS) /Fo$@ win32_init.c

win32_joystick.obj: win32_joystick.c ..\\internal.h platform.h
	$(CC) $(CFLAGS) /Fo$@ win32_joystick.c

win32_thread.obj: win32_thread.c ..\\internal.h platform.h
	$(CC) $(CFLAGS) /Fo$@ win32_thread.c

win32_time.obj: win32_time.c ..\\internal.h platform.h
	$(CC) $(CFLAGS) /Fo$@ win32_time.c

win32_window.obj: win32_window.c ..\\internal.h platform.h
	$(CC) $(CFLAGS) /Fo$@ win32_window.c

	
#OpenGUI (4/23/06) - These are used for debug builds

enable_d.obj: ..\\enable.c ..\\internal.h platform.h
	$(CC) $(CFLAGS_D) /Fo$@ ..\\enable.c

fullscreen_d.obj: ..\\fullscreen.c ..\\internal.h platform.h
	$(CC) $(CFLAGS_D) /Fo$@ ..\\fullscreen.c

glext_d.obj: ..\\glext.c ..\\internal.h platform.h
	$(CC) $(CFLAGS_D) /Fo$@ ..\\glext.c

image_d.obj: ..\\image.c ..\\internal.h platform.h
	$(CC) $(CFLAGS_SPEED_D) /Fo$@ ..\\image.c

init_d.obj: ..\\init.c ..\\internal.h platform.h
	$(CC) $(CFLAGS_D) /Fo$@ ..\\init.c

input_d.obj: ..\\input.c ..\\internal.h platform.h
	$(CC) $(CFLAGS_D) /Fo$@ ..\\input.c

joystick_d.obj: ..\\joystick.c ..\\internal.h platform.h
	$(CC) $(CFLAGS_D) /Fo$@ ..\\joystick.c

tga_d.obj: ..\\tga.c ..\\internal.h platform.h
	$(CC) $(CFLAGS_SPEED_D) /Fo$@ ..\\tga.c

thread_d.obj: ..\\thread.c ..\\internal.h platform.h
	$(CC) $(CFLAGS_D) /Fo$@ ..\\thread.c

time_d.obj: ..\\time.c ..\\internal.h platform.h
	$(CC) $(CFLAGS_D) /Fo$@ ..\\time.c

window_d.obj: ..\\window.c ..\\internal.h platform.h
	$(CC) $(CFLAGS_D) /Fo$@ ..\\window.c

win32_enable_d.obj: win32_enable.c ..\\internal.h platform.h
	$(CC) $(CFLAGS_D) /Fo$@ win32_enable.c

win32_fullscreen_d.obj: win32_fullscreen.c ..\\internal.h platform.h
	$(CC) $(CFLAGS_D) /Fo$@ win32_fullscreen.c

win32_glext_d.obj: win32_glext.c ..\\internal.h platform.h
	$(CC) $(CFLAGS_D) /Fo$@ win32_glext.c

win32_init_d.obj: win32_init.c ..\\internal.h platform.h
	$(CC) $(CFLAGS_D) /Fo$@ win32_init.c

win32_joystick_d.obj: win32_joystick.c ..\\internal.h platform.h
	$(CC) $(CFLAGS_D) /Fo$@ win32_joystick.c

win32_thread_d.obj: win32_thread.c ..\\internal.h platform.h
	$(CC) $(CFLAGS_D) /Fo$@ win32_thread.c

win32_time_d.obj: win32_time.c ..\\internal.h platform.h
	$(CC) $(CFLAGS_D) /Fo$@ win32_time.c

win32_window_d.obj: win32_window.c ..\\internal.h platform.h
	$(CC) $(CFLAGS_D) /Fo$@ win32_window.c


##########################################################################
# Rules for building dynamic library object files
##########################################################################
enable_dll.obj: ..\\enable.c ..\\internal.h platform.h
	$(CC) $(CFLAGS_DLL) /Fo$@ ..\\enable.c

fullscreen_dll.obj: ..\\fullscreen.c ..\\internal.h platform.h
	$(CC) $(CFLAGS_DLL) /Fo$@ ..\\fullscreen.c

glext_dll.obj: ..\\glext.c ..\\internal.h platform.h
	$(CC) $(CFLAGS_DLL) /Fo$@ ..\\glext.c

image_dll.obj: ..\\image.c ..\\internal.h platform.h
	$(CC) $(CFLAGS_SPEED_DLL) /Fo$@ ..\\image.c

init_dll.obj: ..\\init.c ..\\internal.h platform.h
	$(CC) $(CFLAGS_DLL) /Fo$@ ..\\init.c

input_dll.obj: ..\\input.c ..\\internal.h platform.h
	$(CC) $(CFLAGS_DLL) /Fo$@ ..\\input.c

joystick_dll.obj: ..\\joystick.c ..\\internal.h platform.h
	$(CC) $(CFLAGS_DLL) /Fo$@ ..\\joystick.c

tga_dll.obj: ..\\tga.c ..\\internal.h platform.h
	$(CC) $(CFLAGS_SPEED_DLL) /Fo$@ ..\\tga.c

thread_dll.obj: ..\\thread.c ..\\internal.h platform.h
	$(CC) $(CFLAGS_DLL) /Fo$@ ..\\thread.c

time_dll.obj: ..\\time.c ..\\internal.h platform.h
	$(CC) $(CFLAGS_DLL) /Fo$@ ..\\time.c

window_dll.obj: ..\\window.c ..\\internal.h platform.h
	$(CC) $(CFLAGS_DLL) /Fo$@ ..\\window.c

win32_dllmain_dll.obj: win32_dllmain.c ..\\internal.h platform.h
	$(CC) $(CFLAGS_DLL) /Fo$@ win32_dllmain.c

win32_enable_dll.obj: win32_enable.c ..\\internal.h platform.h
	$(CC) $(CFLAGS_DLL) /Fo$@ win32_enable.c

win32_fullscreen_dll.obj: win32_fullscreen.c ..\\internal.h platform.h
	$(CC) $(CFLAGS_DLL) /Fo$@ win32_fullscreen.c

win32_glext_dll.obj: win32_glext.c ..\\internal.h platform.h
	$(CC) $(CFLAGS_DLL) /Fo$@ win32_glext.c

win32_init_dll.obj: win32_init.c ..\\internal.h platform.h
	$(CC) $(CFLAGS_DLL) /Fo$@ win32_init.c

win32_joystick_dll.obj: win32_joystick.c ..\\internal.h platform.h
	$(CC) $(CFLAGS_DLL) /Fo$@ win32_joystick.c

win32_thread_dll.obj: win32_thread.c ..\\internal.h platform.h
	$(CC) $(CFLAGS_DLL) /Fo$@ win32_thread.c

win32_time_dll.obj: win32_time.c ..\\internal.h platform.h
	$(CC) $(CFLAGS_DLL) /Fo$@ win32_time.c

win32_window_dll.obj: win32_window.c ..\\internal.h platform.h
	$(CC) $(CFLAGS_DLL) /Fo$@ win32_window.c
